{"ast":null,"code":"var _jsxFileName = \"/Users/avyakth/Documents/Acads/Placements/Projects/Hospital-Management-System/frontend/hospital-ui/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [role, setRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is authenticated on mount\n    const checkAuth = () => {\n      const authenticated = authService.isAuthenticated();\n      setIsAuthenticated(authenticated);\n      if (authenticated) {\n        const user = authService.getCurrentUser();\n        setUsername(user.username);\n        setRole(user.role);\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      setIsAuthenticated(true);\n      setUsername(response.username);\n      setRole(response.role);\n    } catch (error) {\n      setIsAuthenticated(false);\n      setUsername(null);\n      setRole(null);\n      throw error;\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    setIsAuthenticated(false);\n    setUsername(null);\n    setRole(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      username,\n      role,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"M9plyyraL7GceSWFXPEde9o53mY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","username","setUsername","role","setRole","loading","setLoading","checkAuth","authenticated","user","getCurrentUser","login","credentials","response","error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/avyakth/Documents/Acads/Placements/Projects/Hospital-Management-System/frontend/hospital-ui/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { authService } from '../services/authService';\nimport { LoginRequest } from '../types';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  username: string | null;\n  role: string | null;\n  login: (credentials: LoginRequest) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState<string | null>(null);\n  const [role, setRole] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is authenticated on mount\n    const checkAuth = () => {\n      const authenticated = authService.isAuthenticated();\n      setIsAuthenticated(authenticated);\n      \n      if (authenticated) {\n        const user = authService.getCurrentUser();\n        setUsername(user.username);\n        setRole(user.role);\n      }\n      \n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (credentials: LoginRequest) => {\n    try {\n      const response = await authService.login(credentials);\n      setIsAuthenticated(true);\n      setUsername(response.username);\n      setRole(response.role);\n    } catch (error) {\n      setIsAuthenticated(false);\n      setUsername(null);\n      setRole(null);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    authService.logout();\n    setIsAuthenticated(false);\n    setUsername(null);\n    setRole(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        username,\n        role,\n        login,\n        logout,\n        loading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYtD,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAgB,IAAI,CAAC;EACrD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,aAAa,GAAGjB,WAAW,CAACQ,eAAe,CAAC,CAAC;MACnDC,kBAAkB,CAACQ,aAAa,CAAC;MAEjC,IAAIA,aAAa,EAAE;QACjB,MAAMC,IAAI,GAAGlB,WAAW,CAACmB,cAAc,CAAC,CAAC;QACzCR,WAAW,CAACO,IAAI,CAACR,QAAQ,CAAC;QAC1BG,OAAO,CAACK,IAAI,CAACN,IAAI,CAAC;MACpB;MAEAG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,KAAK,GAAG,MAAOC,WAAyB,IAAK;IACjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtB,WAAW,CAACoB,KAAK,CAACC,WAAW,CAAC;MACrDZ,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAACW,QAAQ,CAACZ,QAAQ,CAAC;MAC9BG,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdd,kBAAkB,CAAC,KAAK,CAAC;MACzBE,WAAW,CAAC,IAAI,CAAC;MACjBE,OAAO,CAAC,IAAI,CAAC;MACb,MAAMU,KAAK;IACb;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBxB,WAAW,CAACwB,MAAM,CAAC,CAAC;IACpBf,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,IAAI,CAAC;IACjBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACsB,QAAQ;IACnBC,KAAK,EAAE;MACLlB,eAAe;MACfE,QAAQ;MACRE,IAAI;MACJQ,KAAK;MACLI,MAAM;MACNV;IACF,CAAE;IAAAR,QAAA,EAEDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CA3DWF,YAA+C;AAAA0B,EAAA,GAA/C1B,YAA+C;AA6D5D,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC5C,MAAMC,OAAO,GAAGrC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAAC+B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}