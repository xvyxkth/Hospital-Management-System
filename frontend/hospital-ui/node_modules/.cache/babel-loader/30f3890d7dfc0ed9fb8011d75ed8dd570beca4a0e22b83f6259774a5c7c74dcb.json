{"ast":null,"code":"var _jsxFileName = \"/Users/avyakth/Documents/Acads/Placements/Projects/Hospital-Management-System/frontend/hospital-ui/src/pages/DoctorList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { doctorService } from '../services/doctorService';\nimport { Specialization } from '../types';\nimport '../styles/List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [specializationFilter, setSpecializationFilter] = useState('ALL');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [deleteModal, setDeleteModal] = useState({\n    show: false,\n    doctorId: null\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadDoctors();\n  }, []);\n  useEffect(() => {\n    filterDoctors();\n  }, [searchTerm, specializationFilter, doctors]);\n  const loadDoctors = async () => {\n    try {\n      setLoading(true);\n      const data = await doctorService.getAllDoctors();\n      setDoctors(data);\n      setFilteredDoctors(data);\n      setError('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load doctors');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const filterDoctors = () => {\n    let filtered = doctors;\n\n    // Filter by search term\n    if (searchTerm) {\n      filtered = filtered.filter(doctor => doctor.firstName.toLowerCase().includes(searchTerm.toLowerCase()) || doctor.lastName.toLowerCase().includes(searchTerm.toLowerCase()) || doctor.email.toLowerCase().includes(searchTerm.toLowerCase()) || doctor.phone.includes(searchTerm) || doctor.specialization.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n\n    // Filter by specialization\n    if (specializationFilter !== 'ALL') {\n      filtered = filtered.filter(doctor => doctor.specialization === specializationFilter);\n    }\n    setFilteredDoctors(filtered);\n  };\n  const handleDelete = async () => {\n    if (!deleteModal.doctorId) return;\n    try {\n      await doctorService.deleteDoctor(deleteModal.doctorId);\n      setDoctors(doctors.filter(d => d.id !== deleteModal.doctorId));\n      setDeleteModal({\n        show: false,\n        doctorId: null\n      });\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to delete doctor');\n      setDeleteModal({\n        show: false,\n        doctorId: null\n      });\n    }\n  };\n  const getSpecializationBadgeClass = specialization => {\n    const colorMap = {\n      CARDIOLOGY: 'badge-red',\n      NEUROLOGY: 'badge-purple',\n      ORTHOPEDICS: 'badge-blue',\n      PEDIATRICS: 'badge-green',\n      DERMATOLOGY: 'badge-orange',\n      ONCOLOGY: 'badge-pink',\n      PSYCHIATRY: 'badge-teal',\n      GENERAL_MEDICINE: 'badge-gray'\n    };\n    return colorMap[specialization] || 'badge-gray';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading doctors...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Doctor Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => navigate('/doctors/new'),\n        children: \"Add New Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Search by name, email, phone, or specialization...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-select\",\n        value: specializationFilter,\n        onChange: e => setSpecializationFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"All Specializations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), Object.values(Specialization).map(spec => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: spec,\n          children: spec.replace(/_/g, ' ')\n        }, spec, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-info\",\n      children: [\"Showing \", filteredDoctors.length, \" of \", doctors.length, \" doctors\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Consultation Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredDoctors.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 7,\n              className: \"no-data\",\n              children: \"No doctors found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this) : filteredDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${getSpecializationBadgeClass(doctor.specialization)}`,\n                children: doctor.specialization.replace(/_/g, ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [doctor.experienceYears, \" years\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", doctor.consultationFee]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-info\",\n                  onClick: () => navigate(`/doctors/${doctor.id}`),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-secondary\",\n                  onClick: () => navigate(`/doctors/edit/${doctor.id}`),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-danger\",\n                  onClick: () => setDeleteModal({\n                    show: true,\n                    doctorId: doctor.id || null\n                  }),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)]\n          }, doctor.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), deleteModal.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setDeleteModal({\n        show: false,\n        doctorId: null\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this doctor? This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => setDeleteModal({\n              show: false,\n              doctorId: null\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorList, \"8PqGS6ifDpcujgDTgD2JRtKDIkY=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","doctorService","Specialization","jsxDEV","_jsxDEV","DoctorList","_s","doctors","setDoctors","filteredDoctors","setFilteredDoctors","searchTerm","setSearchTerm","specializationFilter","setSpecializationFilter","loading","setLoading","error","setError","deleteModal","setDeleteModal","show","doctorId","navigate","loadDoctors","filterDoctors","data","getAllDoctors","err","_err$response","_err$response$data","response","message","filtered","filter","doctor","firstName","toLowerCase","includes","lastName","email","phone","specialization","handleDelete","deleteDoctor","d","id","_err$response2","_err$response2$data","getSpecializationBadgeClass","colorMap","CARDIOLOGY","NEUROLOGY","ORTHOPEDICS","PEDIATRICS","DERMATOLOGY","ONCOLOGY","PSYCHIATRY","GENERAL_MEDICINE","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","Object","values","map","spec","replace","length","colSpan","experienceYears","consultationFee","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/avyakth/Documents/Acads/Placements/Projects/Hospital-Management-System/frontend/hospital-ui/src/pages/DoctorList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { doctorService } from '../services/doctorService';\nimport { Doctor, Specialization } from '../types';\nimport '../styles/List.css';\n\nconst DoctorList: React.FC = () => {\n  const [doctors, setDoctors] = useState<Doctor[]>([]);\n  const [filteredDoctors, setFilteredDoctors] = useState<Doctor[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [specializationFilter, setSpecializationFilter] = useState<string>('ALL');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [deleteModal, setDeleteModal] = useState<{ show: boolean; doctorId: number | null }>({\n    show: false,\n    doctorId: null,\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    loadDoctors();\n  }, []);\n\n  useEffect(() => {\n    filterDoctors();\n  }, [searchTerm, specializationFilter, doctors]);\n\n  const loadDoctors = async () => {\n    try {\n      setLoading(true);\n      const data = await doctorService.getAllDoctors();\n      setDoctors(data);\n      setFilteredDoctors(data);\n      setError('');\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to load doctors');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filterDoctors = () => {\n    let filtered = doctors;\n\n    // Filter by search term\n    if (searchTerm) {\n      filtered = filtered.filter(\n        (doctor) =>\n          doctor.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          doctor.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          doctor.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          doctor.phone.includes(searchTerm) ||\n          doctor.specialization.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    // Filter by specialization\n    if (specializationFilter !== 'ALL') {\n      filtered = filtered.filter((doctor) => doctor.specialization === specializationFilter);\n    }\n\n    setFilteredDoctors(filtered);\n  };\n\n  const handleDelete = async () => {\n    if (!deleteModal.doctorId) return;\n\n    try {\n      await doctorService.deleteDoctor(deleteModal.doctorId);\n      setDoctors(doctors.filter((d) => d.id !== deleteModal.doctorId));\n      setDeleteModal({ show: false, doctorId: null });\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to delete doctor');\n      setDeleteModal({ show: false, doctorId: null });\n    }\n  };\n\n  const getSpecializationBadgeClass = (specialization: string) => {\n    const colorMap: { [key: string]: string } = {\n      CARDIOLOGY: 'badge-red',\n      NEUROLOGY: 'badge-purple',\n      ORTHOPEDICS: 'badge-blue',\n      PEDIATRICS: 'badge-green',\n      DERMATOLOGY: 'badge-orange',\n      ONCOLOGY: 'badge-pink',\n      PSYCHIATRY: 'badge-teal',\n      GENERAL_MEDICINE: 'badge-gray',\n    };\n    return colorMap[specialization] || 'badge-gray';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <div className=\"loading\">Loading doctors...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"page-header\">\n        <h1>Doctor Management</h1>\n        <button className=\"btn btn-primary\" onClick={() => navigate('/doctors/new')}>\n          Add New Doctor\n        </button>\n      </div>\n\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <div className=\"filters\">\n        <input\n          type=\"text\"\n          className=\"search-input\"\n          placeholder=\"Search by name, email, phone, or specialization...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <select\n          className=\"filter-select\"\n          value={specializationFilter}\n          onChange={(e) => setSpecializationFilter(e.target.value)}\n        >\n          <option value=\"ALL\">All Specializations</option>\n          {Object.values(Specialization).map((spec) => (\n            <option key={spec} value={spec}>\n              {spec.replace(/_/g, ' ')}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"results-info\">\n        Showing {filteredDoctors.length} of {doctors.length} doctors\n      </div>\n\n      <div className=\"table-container\">\n        <table className=\"data-table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Specialization</th>\n              <th>Email</th>\n              <th>Phone</th>\n              <th>Experience</th>\n              <th>Consultation Fee</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredDoctors.length === 0 ? (\n              <tr>\n                <td colSpan={7} className=\"no-data\">\n                  No doctors found\n                </td>\n              </tr>\n            ) : (\n              filteredDoctors.map((doctor) => (\n                <tr key={doctor.id}>\n                  <td>\n                    <strong>\n                      {doctor.firstName} {doctor.lastName}\n                    </strong>\n                  </td>\n                  <td>\n                    <span className={`badge ${getSpecializationBadgeClass(doctor.specialization)}`}>\n                      {doctor.specialization.replace(/_/g, ' ')}\n                    </span>\n                  </td>\n                  <td>{doctor.email}</td>\n                  <td>{doctor.phone}</td>\n                  <td>{doctor.experienceYears} years</td>\n                  <td>${doctor.consultationFee}</td>\n                  <td>\n                    <div className=\"action-buttons\">\n                      <button\n                        className=\"btn btn-sm btn-info\"\n                        onClick={() => navigate(`/doctors/${doctor.id}`)}\n                      >\n                        View\n                      </button>\n                      <button\n                        className=\"btn btn-sm btn-secondary\"\n                        onClick={() => navigate(`/doctors/edit/${doctor.id}`)}\n                      >\n                        Edit\n                      </button>\n                      <button\n                        className=\"btn btn-sm btn-danger\"\n                        onClick={() => setDeleteModal({ show: true, doctorId: doctor.id || null })}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {deleteModal.show && (\n        <div className=\"modal-overlay\" onClick={() => setDeleteModal({ show: false, doctorId: null })}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <h2>Confirm Delete</h2>\n            <p>Are you sure you want to delete this doctor? This action cannot be undone.</p>\n            <div className=\"modal-actions\">\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => setDeleteModal({ show: false, doctorId: null })}\n              >\n                Cancel\n              </button>\n              <button className=\"btn btn-danger\" onClick={handleDelete}>\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DoctorList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAAiBC,cAAc,QAAQ,UAAU;AACjD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAS,KAAK,CAAC;EAC/E,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAA6C;IACzFuB,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACdyB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd0B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACd,UAAU,EAAEE,oBAAoB,EAAEN,OAAO,CAAC,CAAC;EAE/C,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFR,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMU,IAAI,GAAG,MAAMzB,aAAa,CAAC0B,aAAa,CAAC,CAAC;MAChDnB,UAAU,CAACkB,IAAI,CAAC;MAChBhB,kBAAkB,CAACgB,IAAI,CAAC;MACxBR,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOU,GAAQ,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACjBZ,QAAQ,CAAC,EAAAW,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,wBAAwB,CAAC;IACnE,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIQ,QAAQ,GAAG1B,OAAO;;IAEtB;IACA,IAAII,UAAU,EAAE;MACdsB,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CACvBC,MAAM,IACLA,MAAM,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3B,UAAU,CAAC0B,WAAW,CAAC,CAAC,CAAC,IACjEF,MAAM,CAACI,QAAQ,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3B,UAAU,CAAC0B,WAAW,CAAC,CAAC,CAAC,IAChEF,MAAM,CAACK,KAAK,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3B,UAAU,CAAC0B,WAAW,CAAC,CAAC,CAAC,IAC7DF,MAAM,CAACM,KAAK,CAACH,QAAQ,CAAC3B,UAAU,CAAC,IACjCwB,MAAM,CAACO,cAAc,CAACL,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3B,UAAU,CAAC0B,WAAW,CAAC,CAAC,CACzE,CAAC;IACH;;IAEA;IACA,IAAIxB,oBAAoB,KAAK,KAAK,EAAE;MAClCoB,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACO,cAAc,KAAK7B,oBAAoB,CAAC;IACxF;IAEAH,kBAAkB,CAACuB,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACxB,WAAW,CAACG,QAAQ,EAAE;IAE3B,IAAI;MACF,MAAMrB,aAAa,CAAC2C,YAAY,CAACzB,WAAW,CAACG,QAAQ,CAAC;MACtDd,UAAU,CAACD,OAAO,CAAC2B,MAAM,CAAEW,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAK3B,WAAW,CAACG,QAAQ,CAAC,CAAC;MAChEF,cAAc,CAAC;QAAEC,IAAI,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAK,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOM,GAAQ,EAAE;MAAA,IAAAmB,cAAA,EAAAC,mBAAA;MACjB9B,QAAQ,CAAC,EAAA6B,cAAA,GAAAnB,GAAG,CAACG,QAAQ,cAAAgB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcrB,IAAI,cAAAsB,mBAAA,uBAAlBA,mBAAA,CAAoBhB,OAAO,KAAI,yBAAyB,CAAC;MAClEZ,cAAc,CAAC;QAAEC,IAAI,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAK,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAM2B,2BAA2B,GAAIP,cAAsB,IAAK;IAC9D,MAAMQ,QAAmC,GAAG;MAC1CC,UAAU,EAAE,WAAW;MACvBC,SAAS,EAAE,cAAc;MACzBC,WAAW,EAAE,YAAY;MACzBC,UAAU,EAAE,aAAa;MACzBC,WAAW,EAAE,cAAc;MAC3BC,QAAQ,EAAE,YAAY;MACtBC,UAAU,EAAE,YAAY;MACxBC,gBAAgB,EAAE;IACpB,CAAC;IACD,OAAOR,QAAQ,CAACR,cAAc,CAAC,IAAI,YAAY;EACjD,CAAC;EAED,IAAI3B,OAAO,EAAE;IACX,oBACEX,OAAA;MAAKuD,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBxD,OAAA;QAAKuD,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEV;EAEA,oBACE5D,OAAA;IAAKuD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxD,OAAA;MAAKuD,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BxD,OAAA;QAAAwD,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B5D,OAAA;QAAQuD,SAAS,EAAC,iBAAiB;QAACM,OAAO,EAAEA,CAAA,KAAM1C,QAAQ,CAAC,cAAc,CAAE;QAAAqC,QAAA,EAAC;MAE7E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL/C,KAAK,iBAAIb,OAAA;MAAKuD,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE3C;IAAK;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEtD5D,OAAA;MAAKuD,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBxD,OAAA;QACE8D,IAAI,EAAC,MAAM;QACXP,SAAS,EAAC,cAAc;QACxBQ,WAAW,EAAC,oDAAoD;QAChEC,KAAK,EAAEzD,UAAW;QAClB0D,QAAQ,EAAGC,CAAC,IAAK1D,aAAa,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF5D,OAAA;QACEuD,SAAS,EAAC,eAAe;QACzBS,KAAK,EAAEvD,oBAAqB;QAC5BwD,QAAQ,EAAGC,CAAC,IAAKxD,uBAAuB,CAACwD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAR,QAAA,gBAEzDxD,OAAA;UAAQgE,KAAK,EAAC,KAAK;UAAAR,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC/CQ,MAAM,CAACC,MAAM,CAACvE,cAAc,CAAC,CAACwE,GAAG,CAAEC,IAAI,iBACtCvE,OAAA;UAAmBgE,KAAK,EAAEO,IAAK;UAAAf,QAAA,EAC5Be,IAAI,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG;QAAC,GADbD,IAAI;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,UACpB,EAACnD,eAAe,CAACoE,MAAM,EAAC,MAAI,EAACtE,OAAO,CAACsE,MAAM,EAAC,UACtD;IAAA;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEN5D,OAAA;MAAKuD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BxD,OAAA;QAAOuD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC3BxD,OAAA;UAAAwD,QAAA,eACExD,OAAA;YAAAwD,QAAA,gBACExD,OAAA;cAAAwD,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb5D,OAAA;cAAAwD,QAAA,EAAI;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvB5D,OAAA;cAAAwD,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACd5D,OAAA;cAAAwD,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACd5D,OAAA;cAAAwD,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB5D,OAAA;cAAAwD,QAAA,EAAI;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzB5D,OAAA;cAAAwD,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR5D,OAAA;UAAAwD,QAAA,EACGnD,eAAe,CAACoE,MAAM,KAAK,CAAC,gBAC3BzE,OAAA;YAAAwD,QAAA,eACExD,OAAA;cAAI0E,OAAO,EAAE,CAAE;cAACnB,SAAS,EAAC,SAAS;cAAAC,QAAA,EAAC;YAEpC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,GAELvD,eAAe,CAACiE,GAAG,CAAEvC,MAAM,iBACzB/B,OAAA;YAAAwD,QAAA,gBACExD,OAAA;cAAAwD,QAAA,eACExD,OAAA;gBAAAwD,QAAA,GACGzB,MAAM,CAACC,SAAS,EAAC,GAAC,EAACD,MAAM,CAACI,QAAQ;cAAA;gBAAAsB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACL5D,OAAA;cAAAwD,QAAA,eACExD,OAAA;gBAAMuD,SAAS,EAAE,SAASV,2BAA2B,CAACd,MAAM,CAACO,cAAc,CAAC,EAAG;gBAAAkB,QAAA,EAC5EzB,MAAM,CAACO,cAAc,CAACkC,OAAO,CAAC,IAAI,EAAE,GAAG;cAAC;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACL5D,OAAA;cAAAwD,QAAA,EAAKzB,MAAM,CAACK;YAAK;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvB5D,OAAA;cAAAwD,QAAA,EAAKzB,MAAM,CAACM;YAAK;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvB5D,OAAA;cAAAwD,QAAA,GAAKzB,MAAM,CAAC4C,eAAe,EAAC,QAAM;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvC5D,OAAA;cAAAwD,QAAA,GAAI,GAAC,EAACzB,MAAM,CAAC6C,eAAe;YAAA;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClC5D,OAAA;cAAAwD,QAAA,eACExD,OAAA;gBAAKuD,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7BxD,OAAA;kBACEuD,SAAS,EAAC,qBAAqB;kBAC/BM,OAAO,EAAEA,CAAA,KAAM1C,QAAQ,CAAC,YAAYY,MAAM,CAACW,EAAE,EAAE,CAAE;kBAAAc,QAAA,EAClD;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT5D,OAAA;kBACEuD,SAAS,EAAC,0BAA0B;kBACpCM,OAAO,EAAEA,CAAA,KAAM1C,QAAQ,CAAC,iBAAiBY,MAAM,CAACW,EAAE,EAAE,CAAE;kBAAAc,QAAA,EACvD;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT5D,OAAA;kBACEuD,SAAS,EAAC,uBAAuB;kBACjCM,OAAO,EAAEA,CAAA,KAAM7C,cAAc,CAAC;oBAAEC,IAAI,EAAE,IAAI;oBAAEC,QAAQ,EAAEa,MAAM,CAACW,EAAE,IAAI;kBAAK,CAAC,CAAE;kBAAAc,QAAA,EAC5E;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA,GApCE7B,MAAM,CAACW,EAAE;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqCd,CACL;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAEL7C,WAAW,CAACE,IAAI,iBACfjB,OAAA;MAAKuD,SAAS,EAAC,eAAe;MAACM,OAAO,EAAEA,CAAA,KAAM7C,cAAc,CAAC;QAAEC,IAAI,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAK,CAAC,CAAE;MAAAsC,QAAA,eAC5FxD,OAAA;QAAKuD,SAAS,EAAC,OAAO;QAACM,OAAO,EAAGK,CAAC,IAAKA,CAAC,CAACW,eAAe,CAAC,CAAE;QAAArB,QAAA,gBACzDxD,OAAA;UAAAwD,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB5D,OAAA;UAAAwD,QAAA,EAAG;QAA0E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjF5D,OAAA;UAAKuD,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BxD,OAAA;YACEuD,SAAS,EAAC,mBAAmB;YAC7BM,OAAO,EAAEA,CAAA,KAAM7C,cAAc,CAAC;cAAEC,IAAI,EAAE,KAAK;cAAEC,QAAQ,EAAE;YAAK,CAAC,CAAE;YAAAsC,QAAA,EAChE;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5D,OAAA;YAAQuD,SAAS,EAAC,gBAAgB;YAACM,OAAO,EAAEtB,YAAa;YAAAiB,QAAA,EAAC;UAE1D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1D,EAAA,CAzNID,UAAoB;EAAA,QAWPL,WAAW;AAAA;AAAAkF,EAAA,GAXxB7E,UAAoB;AA2N1B,eAAeA,UAAU;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}