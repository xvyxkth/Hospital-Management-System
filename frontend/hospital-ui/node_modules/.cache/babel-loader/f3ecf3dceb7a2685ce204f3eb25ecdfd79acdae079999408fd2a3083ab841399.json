{"ast":null,"code":"import apiClient from './apiClient';\nexport const authService = {\n  // Login\n  login: async credentials => {\n    const response = await apiClient.post('/auth/login', credentials);\n\n    // Store token and user info in localStorage\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('username', response.data.username);\n      localStorage.setItem('role', response.data.role);\n    }\n    return response.data;\n  },\n  // Logout\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('role');\n  },\n  // Check if user is authenticated\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n  // Get current user info\n  getCurrentUser: () => {\n    return {\n      username: localStorage.getItem('username'),\n      role: localStorage.getItem('role')\n    };\n  }\n};","map":{"version":3,"names":["apiClient","authService","login","credentials","response","post","data","token","localStorage","setItem","username","role","logout","removeItem","isAuthenticated","getItem","getCurrentUser"],"sources":["/Users/avyakth/Documents/Acads/Placements/Projects/Hospital-Management-System/frontend/hospital-ui/src/services/authService.ts"],"sourcesContent":["import apiClient from './apiClient';\nimport { LoginRequest, LoginResponse } from '../types';\n\nexport const authService = {\n  // Login\n  login: async (credentials: LoginRequest): Promise<LoginResponse> => {\n    const response = await apiClient.post<LoginResponse>('/auth/login', credentials);\n    \n    // Store token and user info in localStorage\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('username', response.data.username);\n      localStorage.setItem('role', response.data.role);\n    }\n    \n    return response.data;\n  },\n\n  // Logout\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('role');\n  },\n\n  // Check if user is authenticated\n  isAuthenticated: (): boolean => {\n    return !!localStorage.getItem('token');\n  },\n\n  // Get current user info\n  getCurrentUser: () => {\n    return {\n      username: localStorage.getItem('username'),\n      role: localStorage.getItem('role'),\n    };\n  },\n};\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,aAAa;AAGnC,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,KAAK,EAAE,MAAOC,WAAyB,IAA6B;IAClE,MAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAgB,aAAa,EAAEF,WAAW,CAAC;;IAEhF;IACA,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAACE,IAAI,CAACI,QAAQ,CAAC;MACxDF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,QAAQ,CAACE,IAAI,CAACK,IAAI,CAAC;IAClD;IAEA,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,MAAM,EAAEA,CAAA,KAAM;IACZJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCL,YAAY,CAACK,UAAU,CAAC,UAAU,CAAC;IACnCL,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED;EACAC,eAAe,EAAEA,CAAA,KAAe;IAC9B,OAAO,CAAC,CAACN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;EACxC,CAAC;EAED;EACAC,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAO;MACLN,QAAQ,EAAEF,YAAY,CAACO,OAAO,CAAC,UAAU,CAAC;MAC1CJ,IAAI,EAAEH,YAAY,CAACO,OAAO,CAAC,MAAM;IACnC,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}