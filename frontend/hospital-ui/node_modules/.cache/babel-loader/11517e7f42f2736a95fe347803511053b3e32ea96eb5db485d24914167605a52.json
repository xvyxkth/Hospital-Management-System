{"ast":null,"code":"import apiClient from './apiClient';\nexport const appointmentService = {\n  // Get all appointments\n  getAllAppointments: async () => {\n    const response = await apiClient.get('/appointments');\n    return response.data.data;\n  },\n  // Get appointment by ID\n  getAppointmentById: async id => {\n    const response = await apiClient.get(`/appointments/${id}`);\n    return response.data.data;\n  },\n  // Create appointment\n  createAppointment: async appointment => {\n    const response = await apiClient.post('/appointments', appointment);\n    return response.data.data;\n  },\n  // Update appointment\n  updateAppointment: async (id, appointment) => {\n    const response = await apiClient.put(`/appointments/${id}`, appointment);\n    return response.data.data;\n  },\n  // Cancel appointment\n  cancelAppointment: async id => {\n    await apiClient.patch(`/appointments/${id}/cancel`);\n  },\n  // Update appointment status\n  updateAppointmentStatus: async (id, status) => {\n    const response = await apiClient.patch(`/appointments/${id}/status?status=${status}`);\n    return response.data.data;\n  },\n  // Delete appointment\n  deleteAppointment: async id => {\n    await apiClient.delete(`/appointments/${id}`);\n  },\n  // Get appointments by patient\n  getAppointmentsByPatient: async patientId => {\n    const response = await apiClient.get(`/appointments/patient/${patientId}`);\n    return response.data.data;\n  },\n  // Get appointments by doctor\n  getAppointmentsByDoctor: async doctorId => {\n    const response = await apiClient.get(`/appointments/doctor/${doctorId}`);\n    return response.data.data;\n  },\n  // Get appointments by date\n  getAppointmentsByDate: async date => {\n    const response = await apiClient.get(`/appointments/date/${date}`);\n    return response.data.data;\n  }\n};","map":{"version":3,"names":["apiClient","appointmentService","getAllAppointments","response","get","data","getAppointmentById","id","createAppointment","appointment","post","updateAppointment","put","cancelAppointment","patch","updateAppointmentStatus","status","deleteAppointment","delete","getAppointmentsByPatient","patientId","getAppointmentsByDoctor","doctorId","getAppointmentsByDate","date"],"sources":["/Users/avyakth/Documents/Acads/Placements/Projects/Hospital-Management-System/frontend/hospital-ui/src/services/appointmentService.ts"],"sourcesContent":["import apiClient from './apiClient';\nimport { ApiResponse, Appointment, AppointmentFormData } from '../types';\n\nexport const appointmentService = {\n  // Get all appointments\n  getAllAppointments: async (): Promise<Appointment[]> => {\n    const response = await apiClient.get<ApiResponse<Appointment[]>>('/appointments');\n    return response.data.data;\n  },\n\n  // Get appointment by ID\n  getAppointmentById: async (id: number): Promise<Appointment> => {\n    const response = await apiClient.get<ApiResponse<Appointment>>(`/appointments/${id}`);\n    return response.data.data;\n  },\n\n  // Create appointment\n  createAppointment: async (appointment: AppointmentFormData): Promise<Appointment> => {\n    const response = await apiClient.post<ApiResponse<Appointment>>('/appointments', appointment);\n    return response.data.data;\n  },\n\n  // Update appointment\n  updateAppointment: async (id: number, appointment: AppointmentFormData): Promise<Appointment> => {\n    const response = await apiClient.put<ApiResponse<Appointment>>(\n      `/appointments/${id}`,\n      appointment\n    );\n    return response.data.data;\n  },\n\n  // Cancel appointment\n  cancelAppointment: async (id: number): Promise<void> => {\n    await apiClient.patch(`/appointments/${id}/cancel`);\n  },\n\n  // Update appointment status\n  updateAppointmentStatus: async (id: number, status: string): Promise<Appointment> => {\n    const response = await apiClient.patch<ApiResponse<Appointment>>(\n      `/appointments/${id}/status?status=${status}`\n    );\n    return response.data.data;\n  },\n\n  // Delete appointment\n  deleteAppointment: async (id: number): Promise<void> => {\n    await apiClient.delete(`/appointments/${id}`);\n  },\n\n  // Get appointments by patient\n  getAppointmentsByPatient: async (patientId: number): Promise<Appointment[]> => {\n    const response = await apiClient.get<ApiResponse<Appointment[]>>(\n      `/appointments/patient/${patientId}`\n    );\n    return response.data.data;\n  },\n\n  // Get appointments by doctor\n  getAppointmentsByDoctor: async (doctorId: number): Promise<Appointment[]> => {\n    const response = await apiClient.get<ApiResponse<Appointment[]>>(\n      `/appointments/doctor/${doctorId}`\n    );\n    return response.data.data;\n  },\n\n  // Get appointments by date\n  getAppointmentsByDate: async (date: string): Promise<Appointment[]> => {\n    const response = await apiClient.get<ApiResponse<Appointment[]>>(\n      `/appointments/date/${date}`\n    );\n    return response.data.data;\n  },\n};\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,aAAa;AAGnC,OAAO,MAAMC,kBAAkB,GAAG;EAChC;EACAC,kBAAkB,EAAE,MAAAA,CAAA,KAAoC;IACtD,MAAMC,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAA6B,eAAe,CAAC;IACjF,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAC,kBAAkB,EAAE,MAAOC,EAAU,IAA2B;IAC9D,MAAMJ,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAA2B,iBAAiBG,EAAE,EAAE,CAAC;IACrF,OAAOJ,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAG,iBAAiB,EAAE,MAAOC,WAAgC,IAA2B;IACnF,MAAMN,QAAQ,GAAG,MAAMH,SAAS,CAACU,IAAI,CAA2B,eAAe,EAAED,WAAW,CAAC;IAC7F,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAM,iBAAiB,EAAE,MAAAA,CAAOJ,EAAU,EAAEE,WAAgC,KAA2B;IAC/F,MAAMN,QAAQ,GAAG,MAAMH,SAAS,CAACY,GAAG,CAClC,iBAAiBL,EAAE,EAAE,EACrBE,WACF,CAAC;IACD,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAQ,iBAAiB,EAAE,MAAON,EAAU,IAAoB;IACtD,MAAMP,SAAS,CAACc,KAAK,CAAC,iBAAiBP,EAAE,SAAS,CAAC;EACrD,CAAC;EAED;EACAQ,uBAAuB,EAAE,MAAAA,CAAOR,EAAU,EAAES,MAAc,KAA2B;IACnF,MAAMb,QAAQ,GAAG,MAAMH,SAAS,CAACc,KAAK,CACpC,iBAAiBP,EAAE,kBAAkBS,MAAM,EAC7C,CAAC;IACD,OAAOb,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAY,iBAAiB,EAAE,MAAOV,EAAU,IAAoB;IACtD,MAAMP,SAAS,CAACkB,MAAM,CAAC,iBAAiBX,EAAE,EAAE,CAAC;EAC/C,CAAC;EAED;EACAY,wBAAwB,EAAE,MAAOC,SAAiB,IAA6B;IAC7E,MAAMjB,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAClC,yBAAyBgB,SAAS,EACpC,CAAC;IACD,OAAOjB,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAgB,uBAAuB,EAAE,MAAOC,QAAgB,IAA6B;IAC3E,MAAMnB,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAClC,wBAAwBkB,QAAQ,EAClC,CAAC;IACD,OAAOnB,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAkB,qBAAqB,EAAE,MAAOC,IAAY,IAA6B;IACrE,MAAMrB,QAAQ,GAAG,MAAMH,SAAS,CAACI,GAAG,CAClC,sBAAsBoB,IAAI,EAC5B,CAAC;IACD,OAAOrB,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}